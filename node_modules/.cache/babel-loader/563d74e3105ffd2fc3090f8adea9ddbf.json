{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Context = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createReactContext = require('create-react-context');\n\nvar _createReactContext2 = _interopRequireDefault(_createReactContext);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Context = exports.Context = (0, _createReactContext2.default)(); // export const contextPropTypes =\n// {\n// \tmenuIsExpanded     : PropTypes.bool.isRequired,\n// \ttoggleMenu         : PropTypes.func.isRequired,\n// \tregisterMenu       : PropTypes.func.isRequired,\n// \tregisterMenuButton : PropTypes.func.isRequired,\n// \tgetTogglerNode     : PropTypes.func.isRequired\n// }\n\nvar PageAndMenu = function (_Component) {\n  _inherits(PageAndMenu, _Component); // state =\n  // {\n  // \tshow_menu  : false,\n  // \tmenu_width : 0,\n  // \tpage_moved_aside : false\n  // }\n\n\n  function PageAndMenu() {\n    _classCallCheck(this, PageAndMenu); // `state` is placed here to so that it's initialized\n    // after all instance methods because it references them.\n\n\n    var _this = _possibleConstructorReturn(this, (PageAndMenu.__proto__ || Object.getPrototypeOf(PageAndMenu)).call(this));\n\n    _this.toggleMenu = function (show) {\n      _this.menu.toggle(show, function () {\n        _this.setState({\n          menuIsExpanded: _this.menu.isShown()\n        }); // Focus the menu when it's expanded.\n        // Focus the menu button when menu is collapsed.\n\n\n        if (_this.menu.isShown()) {\n          var menu = _this.menu.menu();\n\n          menu && menu.focus && menu.focus();\n        } else {\n          _this.menuButton.element().focus();\n        }\n      });\n    };\n\n    _this.registerMenu = function (menu) {\n      if (_this.menu) {\n        throw new Error('[react-responsive-ui] There already is a menu registered for this page.');\n      }\n\n      _this.menu = menu; // Return `.unregister()`.\n\n      return function () {\n        return _this.menu = undefined;\n      };\n    };\n\n    _this.registerMenuButton = function (menuButton) {\n      if (_this.menuButton) {\n        throw new Error('[react-responsive-ui] There already is a menu button registered for this page.');\n      }\n\n      _this.menuButton = menuButton; // Return `.unregister()`.\n\n      return function () {\n        return _this.menuButton = undefined;\n      };\n    };\n\n    _this.hideMenu = function (event) {\n      if (!_this.menu || !_this.menuButton) {\n        return;\n      } // Hide the menu only if clicked outside\n\n\n      if (_this.menu.element().contains(event.target) || _this.menuButton.element().contains(event.target)) {\n        return;\n      }\n\n      _this.toggleMenu(false);\n    };\n\n    _this.getTogglerNode = function () {\n      return _this.menuButton.element();\n    };\n\n    _this.state = {\n      // Using `undefined` for `menuIsExpanded` instead of `false`\n      // because menu icon uses it to determine whether\n      // the button has been activated yet.\n      menuIsExpanded: undefined,\n      // false,\n      toggleMenu: _this.toggleMenu,\n      registerMenu: _this.registerMenu,\n      registerMenuButton: _this.registerMenuButton,\n      getTogglerNode: _this.getTogglerNode\n    };\n    return _this;\n  }\n\n  _createClass(PageAndMenu, [{\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(Context.Provider, {\n        value: this.state\n      }, _react2.default.createElement('div', _extends({\n        onTouchStart: this.hideMenu,\n        onMouseDown: this.hideMenu\n      }, this.props)));\n    }\n  }]);\n\n  return PageAndMenu;\n}(_react.Component);\n\nexports.default = PageAndMenu;","map":null,"metadata":{},"sourceType":"script"}