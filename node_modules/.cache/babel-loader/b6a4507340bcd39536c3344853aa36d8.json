{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp2;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _PageAndMenu = require('./PageAndMenu');\n\nvar _MenuIcon = require('./MenuIcon');\n\nvar _MenuIcon2 = _interopRequireDefault(_MenuIcon);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // `PureComponent` is only available in React >= 15.3.0.\n\n\nvar PureComponent = _react2.default.PureComponent || _react2.default.Component;\n\nvar ContextAwareMenuButton = function ContextAwareMenuButton(props) {\n  return _react2.default.createElement(_PageAndMenu.Context.Consumer, null, function (context) {\n    return _react2.default.createElement(MenuButton, _extends({}, props, {\n      registerMenuButton: context.registerMenuButton,\n      toggleMenu: context.toggleMenu,\n      menuIsExpanded: context.menuIsExpanded\n    }));\n  });\n};\n\nexports.default = ContextAwareMenuButton;\nvar MenuButton = (_temp2 = _class = function (_PureComponent) {\n  _inherits(MenuButton, _PureComponent);\n\n  function MenuButton() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MenuButton);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MenuButton.__proto__ || Object.getPrototypeOf(MenuButton)).call.apply(_ref, [this].concat(args))), _this), _this.onClick = function (event) {\n      var toggleMenu = _this.props.toggleMenu;\n      event.preventDefault();\n      toggleMenu();\n    }, _this.storeButtonNode = function (node) {\n      return _this.button = node;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(MenuButton, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var registerMenuButton = this.props.registerMenuButton;\n      this.unregister = registerMenuButton({\n        element: function element() {\n          return _this2.button;\n        }\n      });\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.unregister();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          link = _props.link,\n          className = _props.className,\n          MenuButtonIcon = _props.icon,\n          menuIsExpanded = _props.menuIsExpanded,\n          toggleMenu = _props.toggleMenu,\n          registerMenuButton = _props.registerMenuButton,\n          rest = _objectWithoutProperties(_props, ['link', 'className', 'icon', 'menuIsExpanded', 'toggleMenu', 'registerMenuButton']);\n\n      var properties = _extends({\n        ref: this.storeButtonNode,\n        onClick: this.onClick,\n        // 'aria-label': 'Menu',\n        // 'aria-haspopup': 'menu',\n        'aria-expanded': menuIsExpanded ? true : false,\n        // can be `undefined` to differentiate between \"has been toggled yet\"/\"has not been toggled yet\" to workaround the CSS animation bug.\n        className: (0, _classnames2.default)('rrui__button-reset', 'rrui__outline', 'rrui__menu-button', className)\n      }, rest);\n\n      var children = _react2.default.createElement(MenuButtonIcon, {\n        expanded: menuIsExpanded\n      }); // A link.\n\n\n      if (link) {\n        return _react2.default.createElement('a', _extends({}, properties, {\n          href: link\n        }), children);\n      } // A button.\n\n\n      return _react2.default.createElement('button', _extends({}, properties, {\n        type: 'button'\n      }), children);\n    }\n  }]);\n\n  return MenuButton;\n}(PureComponent), _class.propTypes = {\n  // Context.\n  registerMenuButton: _propTypes2.default.func.isRequired,\n  toggleMenu: _propTypes2.default.func.isRequired,\n  menuIsExpanded: _propTypes2.default.bool,\n  //.isRequired,\n  // A URL of the \"Menu\" page:\n  // if a web browser has javascript disabled (e.g. Tor),\n  // then the menu button will redirect to this Menu page URL.\n  // If not set then won't redirect anywhere.\n  link: _propTypes2.default.string,\n  // HTML `title` attribute.\n  title: _propTypes2.default.string,\n  // Menu button icon component.\n  icon: _propTypes2.default.func.isRequired,\n  // CSS class.\n  className: _propTypes2.default.string,\n  // CSS style object.\n  style: _propTypes2.default.object\n}, _class.defaultProps = {\n  icon: _MenuIcon2.default\n}, _temp2);","map":null,"metadata":{},"sourceType":"script"}