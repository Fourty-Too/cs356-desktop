{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp2;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _WithError = require('./WithError');\n\nvar _WithError2 = _interopRequireDefault(_WithError);\n\nvar _dom = require('./utility/dom');\n\nvar _reduxForm = require('./utility/redux-form');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // `PureComponent` is only available in React >= 15.3.0.\n\n\nvar PureComponent = _react2.default.PureComponent || _react2.default.Component; // http://tympanus.net/codrops/2013/10/15/animated-checkboxes-and-radio-buttons-with-svg/\n\nvar Checkbox = (_temp2 = _class = function (_PureComponent) {\n  _inherits(Checkbox, _PureComponent);\n\n  function Checkbox() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Checkbox);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Checkbox.__proto__ || Object.getPrototypeOf(Checkbox)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.onKeyDown = function (event) {\n      var onKeyDown = _this.props.onKeyDown;\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n\n      if (event.defaultPrevented) {\n        return;\n      }\n\n      if ((0, _dom.submitFormOnCtrlEnter)(event, _this.checkbox)) {\n        return;\n      }\n    }, _this.onFocus = function (event) {\n      var onFocus = _this.props.onFocus;\n\n      if (onFocus) {\n        onFocus(event);\n      }\n\n      _this.setState({\n        isFocused: true\n      });\n    }, _this.onBlur = function (event) {\n      var _this$props = _this.props,\n          onBlur = _this$props.onBlur,\n          value = _this$props.value;\n\n      if (onBlur) {\n        (0, _reduxForm.onBlurForReduxForm)(onBlur, event, value);\n      }\n\n      _this.setState({\n        isFocused: false\n      });\n    }, _this.storeInstance = function (ref) {\n      return _this.checkbox = ref;\n    }, _this.focus = function () {\n      return _this.checkbox.focus();\n    }, _this.toggle = function (event) {\n      // If a link was clicked - don't treat it as a checkbox label click.\n      // (is used for things like \"âœ“ Read and accepted the <a>licence agreement</a>\")\n      if (event.target.tagName.toLowerCase() === 'a') {\n        return;\n      }\n\n      _this.focus();\n\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          onChange = _this$props2.onChange,\n          value = _this$props2.value;\n\n      if (disabled) {\n        return;\n      }\n\n      onChange(!value);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Checkbox, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          value = _props.value,\n          error = _props.error,\n          indicateInvalid = _props.indicateInvalid,\n          multiline = _props.multiline,\n          disabled = _props.disabled,\n          ariaLabel = _props.ariaLabel,\n          children = _props.children,\n          style = _props.style,\n          className = _props.className;\n      var isFocused = this.state.isFocused;\n      return _react2.default.createElement(_WithError2.default, {\n        error: error,\n        indicateInvalid: indicateInvalid,\n        style: style,\n        className: (0, _classnames2.default)(className, 'rrui__checkbox', {\n          // 'rrui__checkbox--checked'  : value,\n          'rrui__checkbox--invalid': indicateInvalid && error,\n          'rrui__checkbox--disabled': disabled,\n          'rrui__checkbox--multiline': multiline,\n          'rrui__checkbox--focus': isFocused\n        })\n      }, _react2.default.createElement('label', {\n        className: (0, _classnames2.default)('rrui__input', {\n          'rrui__input--multiline': multiline\n        })\n      }, _react2.default.createElement('span', {\n        className: 'rrui__checkbox__checkbox'\n      }, _react2.default.createElement('input', {\n        ref: this.storeInstance,\n        type: 'checkbox',\n        'aria-label': this.props['aria-label'] || ariaLabel,\n        'aria-invalid': indicateInvalid && error ? true : undefined,\n        checked: value,\n        disabled: disabled,\n        onKeyDown: this.onKeyDown,\n        onChange: this.toggle,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        className: 'rrui__checkbox__input'\n      }), _react2.default.createElement('svg', {\n        className: (0, _classnames2.default)('rrui__checkbox__box', {\n          'rrui__checkbox__box--checked': value\n        }),\n        focusable: 'false',\n        viewBox: '0 0 24 24',\n        'aria-hidden': 'true'\n      }, _react2.default.createElement('path', {\n        d: value ? CHECKBOX_CHECKED_PATH : CHECKBOX_UNCHECKED_PATH\n      }), ' }'), _react2.default.createElement('span', {\n        className: 'rrui__checkbox__box-background'\n      }), _react2.default.createElement('span', {\n        className: 'rrui__checkbox__focus-ring'\n      })), children && _react2.default.createElement('span', {\n        className: (0, _classnames2.default)('rrui__checkbox__label', {\n          'rrui__checkbox__label--multiline': multiline\n        })\n      }, children)));\n    } // render_static()\n    // {\n    // \tconst { name, value, focus, disabled, children } = this.props\n    //\n    // \treturn (\n    // \t\t<div className=\"rrui__rich__fallback\">\n    // \t\t\t{/* This checkbox will be sent as either \"on\" or `undefined` */}\n    // \t\t\t<input\n    // \t\t\t\ttype=\"checkbox\"\n    // \t\t\t\tname={ name }\n    // \t\t\t\tdisabled={ disabled }\n    // \t\t\t\tdefaultChecked={ value }\n    // \t\t\t\tautoFocus={ focus }/>\n    //\n    // \t\t\t<label className=\"rrui__checkbox__label rrui__checkbox__label--fallback\">\n    // \t\t\t\t{ children }\n    // \t\t\t</label>\n    // \t\t</div>\n    // \t)\n    // }\n\n  }]);\n\n  return Checkbox;\n}(PureComponent), _class.propTypes = {\n  // HTML form field \"name\"\n  name: _propTypes2.default.string,\n  // `true`/`false`\n  value: _propTypes2.default.bool.isRequired,\n  // Set to `true` to enable multiline label\n  multiline: _propTypes2.default.bool.isRequired,\n  // Disables the checkbox\n  disabled: _propTypes2.default.bool.isRequired,\n  // `onChange` handler\n  onChange: _propTypes2.default.func,\n  // When `true` autofocuses the checkbox\n  focus: _propTypes2.default.bool.isRequired,\n  // `aria-label` attribute.\n  // Deprecated, use `aria-label` instead.\n  ariaLabel: _propTypes2.default.string,\n  // The label (text)\n  children: _propTypes2.default.node,\n  // CSS class\n  className: _propTypes2.default.string,\n  // CSS style object\n  style: _propTypes2.default.object\n}, _class.defaultProps = {\n  disabled: false,\n  value: false,\n  multiline: false,\n  focus: false,\n  // Show `error` (if passed).\n  indicateInvalid: true\n}, _temp2);\nexports.default = Checkbox;\nvar CHECKBOX_CHECKED_PATH = \"M21.3,0H2.7C1.2,0,0,1.2,0,2.7v18.7C0,22.8,1.2,24,2.7,24h18.7c1.5,0,2.7-1.2,2.7-2.7V2.7C24,1.2,22.8,0,21.3,0z M9.3,18.7 L2.7,12l1.9-1.9l4.8,4.8L19.5,4.8l1.9,1.9L9.3,18.7z\";\nvar CHECKBOX_UNCHECKED_PATH = \"M21.2,0H2.9C1.3,0,0,1.3,0,2.9v18.3C0,22.8,1.3,24,2.9,24h18.3c1.6,0,2.8-1.3,2.8-2.8V2.9C24,1.3,22.8,0,21.2,0z M22.3,20.7c0,0.9-0.8,1.7-1.7,1.7H3.4c-0.9,0-1.7-0.8-1.7-1.7V3.4c0-0.9,0.8-1.7,1.7-1.7h17.2c0.9,0,1.7,0.8,1.7,1.7V20.7z\"; // Thin.\n// const CHECKBOX_UNCHECKED_PATH = \"M21.2,0H2.9C1.3,0,0,1.3,0,2.8v18.3C0,22.7,1.3,24,2.9,24h18.3c1.6,0,2.8-1.3,2.8-2.8V2.8C24,1.3,22.8,0,21.2,0z M23.2,20.3c0,1.6-1.3,2.8-2.8,2.8H3.7c-1.6,0-2.8-1.3-2.8-2.8V3.7c0-1.6,1.3-2.8,2.8-2.8h16.6c1.6,0,2.8,1.3,2.8,2.8V20.3z\"","map":null,"metadata":{},"sourceType":"script"}