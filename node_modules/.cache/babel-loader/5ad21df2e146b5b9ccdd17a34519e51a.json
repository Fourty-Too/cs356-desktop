{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp2;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _ActivityIndicator = require('./ActivityIndicator');\n\nvar _ActivityIndicator2 = _interopRequireDefault(_ActivityIndicator);\n\nvar _FadeInOut = require('./FadeInOut');\n\nvar _FadeInOut2 = _interopRequireDefault(_FadeInOut);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // `PureComponent` is only available in React >= 15.3.0.\n\n\nvar PureComponent = _react2.default.PureComponent || _react2.default.Component;\nvar Button = (_temp2 = _class = function (_PureComponent) {\n  _inherits(Button, _PureComponent);\n\n  function Button() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Button.__proto__ || Object.getPrototypeOf(Button)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.storeInstance = function (ref) {\n      return _this.button = ref;\n    }, _this.focus = function () {\n      return _this.button.focus();\n    }, _this.linkOnClick = function (event) {\n      var _this$props = _this.props,\n          wait = _this$props.wait,\n          busy = _this$props.busy,\n          disabled = _this$props.disabled,\n          action = _this$props.action,\n          onClick = _this$props.onClick; // Only handle left mouse button clicks\n      // ignoring those ones with a modifier key pressed.\n\n      if (event.button !== 0 || event.shiftKey || event.altKey || event.ctrlKey || event.metaKey) {\n        return;\n      }\n\n      if (wait || busy || _this.state.wait || disabled) {\n        return;\n      } // Could be just a \"submit\" button without having any `action`.\n      // Could also be just a `link` button.\n      // Therefore \"preventing default\" only if `action` is set:\n      // for example, if `link` is set and no `action`\n      // then it should proceed with navigating to the `link`.\n      // And if `link` is set and `action` is specified too\n      // then it will prevent it from navigating to the `link`.\n\n\n      if (action || onClick) {\n        event.preventDefault();\n      }\n\n      _this.buttonOnClick();\n    }, _this.buttonOnClick = function (event) {\n      var _this$props2 = _this.props,\n          action = _this$props2.action,\n          onClick = _this$props2.onClick;\n      var result = void 0; // Could be just a `<button type=\"submit\"/>`\n      // without any `action` supplied.\n\n      if (action) {\n        result = action();\n      } else if (onClick) {\n        result = onClick();\n      }\n\n      if (result && typeof result.then === 'function') {\n        _this.setState({\n          wait: true\n        });\n\n        result.then(function () {\n          return _this._isMounted && _this.setState({\n            wait: false\n          });\n        }, function () {\n          return _this._isMounted && _this.setState({\n            wait: false\n          });\n        });\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Button, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._isMounted = true;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          component = _props.component,\n          link = _props.link,\n          title = _props.title,\n          wait = _props.wait,\n          busy = _props.busy,\n          disabled = _props.disabled,\n          action = _props.action,\n          onClick = _props.onClick,\n          submit = _props.submit,\n          stretch = _props.stretch,\n          style = _props.style,\n          className = _props.className,\n          children = _props.children,\n          rest = _objectWithoutProperties(_props, ['component', 'link', 'title', 'wait', 'busy', 'disabled', 'action', 'onClick', 'submit', 'stretch', 'style', 'className', 'children']);\n\n      var properties = _extends({}, rest, {\n        ref: this.storeInstance,\n        title: title,\n        style: style,\n        className: (0, _classnames2.default)('rrui__input', 'rrui__button-reset', 'rrui__outline', 'rrui__button', {\n          'rrui__button--busy': wait || busy || this.state.wait,\n          'rrui__button--disabled': disabled,\n          'rrui__button--stretch': stretch,\n          'rrui__button-reset--link': link\n        }, className)\n      });\n\n      if (link) {\n        var LinkComponent = component || 'a';\n        return _react2.default.createElement(LinkComponent, _extends({\n          href: component ? undefined : link,\n          onClick: this.linkOnClick\n        }, properties), children);\n      }\n\n      return _react2.default.createElement('button', _extends({\n        type: submit ? 'submit' : 'button',\n        disabled: wait || busy || this.state.wait || disabled,\n        onClick: this.buttonOnClick\n      }, properties), _react2.default.createElement(_FadeInOut2.default, {\n        show: wait || busy || this.state.wait,\n        fadeOutDuration: 300,\n        fadeInClassName: 'rrui__button__busy--after-show'\n      }, _react2.default.createElement('span', {\n        className: 'rrui__button__busy'\n      })), children);\n    }\n  }]);\n\n  return Button;\n}(PureComponent), _class.propTypes = {\n  // onClick handler.\n  // Doesn't receive `event` by default.\n  // Can be `async`/`await` or return a `Promise`\n  // in which case it will show \"wait\" animation.\n  onClick: _propTypes2.default.func,\n  // onClick handler.\n  // (deprecated, use `onClick(event)` instead)\n  action: _propTypes2.default.func,\n  // If `wait` is `true` then the button\n  // will be disabled and a spinner will be shown.\n  wait: _propTypes2.default.bool,\n  // (deprecated)\n  // (use `wait` instead)\n  // If `busy` is `true` then the button\n  // will be disabled and a spinner will be shown.\n  busy: _propTypes2.default.bool,\n  // Disables the button\n  disabled: _propTypes2.default.bool,\n  // When `true`, the button will submit an enclosing form.\n  submit: _propTypes2.default.bool,\n  // If `link` is set, then the button is gonna be an <a/> tag.\n  link: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool]),\n  // Custom React component for the button.\n  component: _propTypes2.default.func,\n  // HTML `title` attribute\n  title: _propTypes2.default.string,\n  // Set to `true` to stretch the button to full width\n  stretch: _propTypes2.default.bool.isRequired,\n  // CSS class name\n  className: _propTypes2.default.string,\n  // CSS style object for the button container\n  style: _propTypes2.default.object\n}, _class.defaultProps = {\n  // Set to `true` to stretch the button to full width\n  stretch: false\n}, _temp2);\nexports.default = Button;","map":null,"metadata":{},"sourceType":"script"}