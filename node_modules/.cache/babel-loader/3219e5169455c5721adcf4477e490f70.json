{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp2;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _Button = require('./Button');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _Modal = require('./Modal');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // Prevents `<form/> submission when `wait` is `true`.\n// And also inserts `<Form.Error/>` when `error` is passed.\n// Using `Component` here instead of `PureComponent`\n// because `<Form.Actions>` depends on `context` and therefore\n// should be rerendered even if the `props` haven't changed.\n// And probably that was also why it would keep displaying an old error\n// (and not resetting it for some reason).\n\n\nvar Form = (_temp2 = _class = function (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Form.__proto__ || Object.getPrototypeOf(Form)).call.apply(_ref, [this].concat(args))), _this), _this.submit = function (event) {\n      if (event) {\n        event.preventDefault();\n      }\n\n      var _this$props = _this.props,\n          wait = _this$props.wait,\n          busy = _this$props.busy,\n          submit = _this$props.submit; // Prevent form double submit\n      // (because not only buttons submit a form,\n      //  therefore just disabling buttons is not enough).\n\n      if (wait || busy) {\n        return;\n      }\n\n      if (submit) {\n        return submit();\n      }\n    }, _this.on_key_down = function (event) {\n      // Cancel editing on \"Escape\" key\n      if (event.keyCode === 27) {\n        var cancel = _this.props.cancel;\n\n        if (cancel) {\n          cancel();\n        }\n\n        event.preventDefault();\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Form, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          post = _props.post,\n          error = _props.error,\n          className = _props.className,\n          style = _props.style;\n      return _react2.default.createElement('form', {\n        onSubmit: this.submit,\n        onKeyDown: this.on_key_down,\n        action: post,\n        method: 'POST',\n        className: (0, _classnames2.default)('rrui__form', className),\n        style: style,\n        noValidate: true\n      }, this.render_children(error));\n    } // Adds `error` element to the form\n\n  }, {\n    key: 'render_children',\n    value: function render_children(error) {\n      var children = this.props.children;\n\n      var form_elements = _react2.default.Children.toArray(children); // Insert `error` element\n\n\n      if (error) {\n        // Will be set to `null` upon insertion\n        var error_element = _react2.default.createElement(Form.Error, {\n          key: 'form-error'\n        }, error); // Show form error above form actions,\n        // so that the error will be visible and won't be overlooked.\n\n\n        var index = 0;\n\n        for (var _iterator = form_elements, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n          var _ref2;\n\n          if (_isArray) {\n            if (_i >= _iterator.length) break;\n            _ref2 = _iterator[_i++];\n          } else {\n            _i = _iterator.next();\n            if (_i.done) break;\n            _ref2 = _i.value;\n          }\n\n          var child = _ref2;\n\n          if (child.type === FormErrorType) {\n            form_elements[index] = _react2.default.cloneElement(child, {\n              key: 'form-error'\n            }, error);\n            error_element = null;\n            break;\n          }\n\n          if (child.type === FormActionsType) {\n            form_elements.insert_at(index, error_element);\n            error_element = null;\n            break;\n          }\n\n          index++;\n        }\n\n        if (error_element) {\n          form_elements.push(error_element);\n        }\n      }\n\n      return form_elements;\n    }\n  }]);\n\n  return Form;\n}(_react.Component), _class.propTypes = {\n  // `onSubmit` handler\n  submit: _propTypes2.default.func,\n  // On `Escape` keydown handler\n  cancel: _propTypes2.default.func,\n  // `error` can be passed for non-javascript old-school forms.\n  // e.g. when a form submitted via HTTP POST request had an error,\n  // then this error is rendered as part of the form.\n  error: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.bool, _propTypes2.default.node]),\n  // The HTML form `action` attribute,\n  // i.e. the URL to which the form will be posted\n  // in case of a non-javascript old-school POST submission.\n  post: _propTypes2.default.string,\n  // Is form submission in progress\n  wait: _propTypes2.default.bool.isRequired,\n  // (deprecated)\n  // (use `wait` instead)\n  // Is form submission in progress\n  busy: _propTypes2.default.bool.isRequired,\n  // CSS class\n  className: _propTypes2.default.string,\n  // CSS style object\n  style: _propTypes2.default.object\n}, _class.defaultProps = {\n  wait: false,\n  busy: false\n}, _temp2);\nexports.default = Form;\n\nForm.Error = function (_ref3) {\n  var children = _ref3.children;\n  return _react2.default.createElement('div', {\n    className: 'rrui__form__error'\n  }, children);\n};\n\nForm.Actions = function (_ref4) {\n  var children = _ref4.children;\n  return _react2.default.createElement(_Modal.ModalContext.Consumer, null, function (context) {\n    return _react2.default.createElement(Actions, {\n      context: context\n    }, children);\n  });\n}; // Workaround for `react-hot-loader`.\n// https://github.com/gaearon/react-hot-loader#checking-element-types\n\n\nvar FormErrorType = _react2.default.createElement(Form.Error, null).type;\n\nvar FormActionsType = _react2.default.createElement(Form.Actions, null).type;\n\nvar Actions = function (_Component2) {\n  _inherits(Actions, _Component2);\n\n  function Actions() {\n    _classCallCheck(this, Actions);\n\n    return _possibleConstructorReturn(this, (Actions.__proto__ || Object.getPrototypeOf(Actions)).apply(this, arguments));\n  }\n\n  _createClass(Actions, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var context = this.props.context;\n\n      if (context) {\n        context.registerForm();\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var context = this.props.context;\n\n      if (context) {\n        context.unregisterForm();\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          context = _props2.context,\n          children = _props2.children,\n          className = _props2.className,\n          style = _props2.style;\n      return _react2.default.createElement('div', {\n        className: (0, _classnames2.default)('rrui__form__actions', className),\n        style: style\n      }, context && _react2.default.createElement(_Button2.default, {\n        action: context.closeIfNotBusy\n      }, context.closeLabel), children);\n    }\n  }]);\n\n  return Actions;\n}(_react.Component);","map":null,"metadata":{},"sourceType":"script"}