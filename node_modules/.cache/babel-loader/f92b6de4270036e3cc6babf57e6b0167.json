{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp2;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _DragAndDrop = require('./DragAndDrop');\n\nvar _dom = require('./utility/dom');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // `PureComponent` is only available in React >= 15.3.0.\n\n\nvar PureComponent = _react2.default.PureComponent || _react2.default.Component;\nvar FileUpload = (_temp2 = _class = function (_PureComponent) {\n  _inherits(FileUpload, _PureComponent);\n\n  function FileUpload() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, FileUpload);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FileUpload.__proto__ || Object.getPrototypeOf(FileUpload)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      draggedOver: false\n    }, _this.onFileSelect = function (event) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          multiple = _this$props.multiple; // Internet Explorer triggers `onChange` when setting\n      // `event.target.value` manually, so ignore such events.\n\n      if (_this.ieTimer) {\n        return;\n      } // `action` property is deprecated.\n\n\n      onChange = onChange || _this.props.action; // This check will be replaced with `onChange : PropTypes.func.isRequired`\n      // when `action` property is removed in some next breaking release.\n\n      if (!onChange) {\n        throw new Error('\"onChange\" handler not passed.');\n      } // Convert from `FileList` to an `Array`.\n\n\n      var value = Array.prototype.slice.call(event.target.files); // `<input multiple/>` attribute is not supported in all browsers.\n\n      onChange(multiple ? value : value[0]); // Internet Explorer triggers `onChange` when setting\n      // `event.target.value` manually, hence the cooldown timer.\n\n      _this.ieTimer = setTimeout(function () {\n        return _this.ieTimer = undefined;\n      }, 0); // Reset the selected file\n      // so that `onChange` is triggered again next time\n      // even if the user selects the same file.\n\n      event.target.value = null;\n    }, _this.onClick = function (event) {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          onClick = _this$props2.onClick;\n\n      if (disabled && event) {\n        return event.preventDefault();\n      }\n\n      if (onClick) {\n        onClick();\n      } // This is why `onClick` is set on the `<input/>`.\n\n\n      _this.fileInput.click();\n    }, _this.onKeyDown = function (event) {\n      if (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\n        return;\n      }\n\n      switch (event.keyCode) {\n        // \"Enter\".\n        case 13: // Spacebar.\n\n        case 32:\n          event.preventDefault(); // Emulate `:active` on key press.\n          // setTimeout(() => {\n          // \tif (this._isMounted) {\n          // \t\tthis.setState({\n          // \t\t\tisActive: true\n          // \t\t})\n          // \t}\n          // })\n\n          return _this.onClick();\n      }\n    }, _this.setDraggedOver = function (draggedOver) {\n      return _this.setState({\n        draggedOver: draggedOver\n      });\n    }, _this.storeFileInputNode = function (node) {\n      return _this.fileInput = node;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(FileUpload, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          required = _props.required,\n          error = _props.error,\n          disabled = _props.disabled,\n          tabIndex = _props.tabIndex,\n          onChange = _props.onChange,\n          multiple = _props.multiple,\n          style = _props.style,\n          className = _props.className,\n          children = _props.children;\n      var draggedOver = this.state.draggedOver;\n      return _react2.default.createElement('div', {\n        style: style,\n        className: (0, _classnames2.default)('rrui__file-upload', className)\n      }, _react2.default.createElement('input', {\n        type: 'file',\n        multiple: _DragAndDrop.supportsMultipleFileUploadOnInputElement ? multiple : undefined,\n        ref: this.storeFileInputNode,\n        onClick: this.onClick,\n        onChange: this.onFileSelect,\n        disabled: disabled,\n        'aria-label': this.props['aria-label'],\n        'aria-required': required ? true : undefined,\n        'aria-invalid': error ? true : undefined,\n        style: HIDDEN\n      }), _react2.default.createElement(_DragAndDrop.DropFiles, {\n        role: 'button',\n        tabIndex: tabIndex,\n        'aria-label': this.props['aria-label'],\n        multiple: multiple,\n        onDrop: onChange,\n        onClick: this.onClick,\n        onKeyDown: this.onKeyDown,\n        setDraggedOver: this.setDraggedOver,\n        className: (0, _classnames2.default)(\n        /* Developers should define `:focus` styles for `<FileUpload/>`s. */\n        'rrui__outline', 'rrui__file-upload__area', {\n          'rrui__file-upload__area--disabled': disabled,\n          'rrui__file-upload__area--invalid': error,\n          'rrui__file-upload__area--dragged-over': draggedOver\n        })\n      }, children), error && _react2.default.createElement('div', {\n        className: 'rrui__input-error'\n      }, error));\n    }\n  }]);\n\n  return FileUpload;\n}(PureComponent), _class.propTypes = {\n  // On file(s) chosen.\n  onChange: _propTypes2.default.func,\n  // (deprecated, use `onChange` instead).\n  // On file(s) chosen.\n  action: _propTypes2.default.func,\n  // Allows choosing multiple files if `true`.\n  multiple: _propTypes2.default.bool,\n  // Disables the file input.\n  disabled: _propTypes2.default.bool,\n  // `onClick` handler.\n  onClick: _propTypes2.default.func,\n  // Whether choosing a file is required.\n  required: _propTypes2.default.bool,\n  // Renders an error message below the `<input/>`.\n  error: _propTypes2.default.string,\n  tabIndex: _propTypes2.default.number.isRequired,\n  // The clickable area, like \"Click here to choose a file\".\n  children: _propTypes2.default.node,\n  // CSS class\n  className: _propTypes2.default.string,\n  // CSS style object\n  style: _propTypes2.default.object\n}, _class.defaultProps = {\n  tabIndex: 0\n}, _temp2);\nexports.default = FileUpload;\nvar HIDDEN = {\n  display: 'none'\n};","map":null,"metadata":{},"sourceType":"script"}