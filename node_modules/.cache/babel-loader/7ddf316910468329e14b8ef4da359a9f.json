{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCountryCodes = getCountryCodes; // See the table of officially assigned ISO 3166-1 alpha-2 country codes:\n// https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Current_codes\n\nvar SKIP_COUNTRIES = exports.SKIP_COUNTRIES = [// \"001\" means \"Non-Geographical Entity\" (\"No country\", \"International\").\n'001', // \"Ascension Island\".\n// \"AC\" is not an officially assigned ISO 3166-1 alpha-2 country code.\n// And there's no flag for it:\n// https://lipis.github.io/flag-icon-css/flags/4x3/ac.svg\n'AC', // \"Tristan da Cunha\".\n// \"TA\" is not an officially assigned ISO 3166-1 alpha-2 country code.\n// And there's no flag for it:\n// https://lipis.github.io/flag-icon-css/flags/4x3/ta.svg\n'TA', // `flag-icon-css` with \"XK\" territory flag hasn't been released.\n// https://github.com/lipis/flag-icon-css/pull/501#issuecomment-466359515\n//\n// \"Kosovo\".\n// \"XK\" is not an officially assigned ISO 3166-1 alpha-2 country code.\n// Kosovo is still a disputed and non-internationally-recognized territory,\n// and the UN Resolution 1244 is still valid.\n// https://en.wikipedia.org/wiki/United_Nations_Security_Council_Resolution_1244\n//\n// https://github.com/catamphetamine/react-phone-number-input/issues/153\n// https://github.com/catamphetamine/react-phone-number-input/pull/155\n//\n'XK'];\n\nfunction getCountryCodes(labels) {\n  // Includes all country codes (excluding \"ZZ\" for \"International\").\n  //\n  // From ISO 3166-1:2006(E/F):\n  //\n  // 8.1.3   User-assigned code elements\n  //\n  // If users need code elements to represent country names not included\n  // in this part of ISO 3166, the series of letters AA, QM to QZ, XA\n  // to XZ, and ZZ, and the series AAA to AAZ, QMA to QZZ, XAA to XZZ,\n  // and ZZA to ZZZ respectively, and the series of numbers 900 to 999\n  // are available. These users should inform the ISO 3166/MA of such use.\n  //\n  return Object.keys(labels).filter(function (key) {\n    return key.length === 2 && key.toUpperCase() === key && key !== 'ZZ' && SKIP_COUNTRIES.indexOf(key) < 0;\n  });\n}","map":null,"metadata":{},"sourceType":"script"}