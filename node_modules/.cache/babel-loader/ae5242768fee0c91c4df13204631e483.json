{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Context = undefined;\n\nvar _class2, _temp3;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _reactCreateRef = require('react-create-ref');\n\nvar _reactCreateRef2 = _interopRequireDefault(_reactCreateRef);\n\nvar _createReactContext = require('create-react-context');\n\nvar _createReactContext2 = _interopRequireDefault(_createReactContext);\n\nvar _PageAndMenu = require('./PageAndMenu');\n\nvar _OnFocusOut = require('./OnFocusOut');\n\nvar _OnFocusOut2 = _interopRequireDefault(_OnFocusOut);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Context = exports.Context = (0, _createReactContext2.default)(); // `PureComponent` is only available in React >= 15.3.0.\n\nvar PureComponent = _react2.default.PureComponent || _react2.default.Component;\n\nvar ContextAwareSlideoutMenu = function (_PureComponent) {\n  _inherits(ContextAwareSlideoutMenu, _PureComponent);\n\n  function ContextAwareSlideoutMenu() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ContextAwareSlideoutMenu);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ContextAwareSlideoutMenu.__proto__ || Object.getPrototypeOf(ContextAwareSlideoutMenu)).call.apply(_ref, [this].concat(args))), _this), _this.slideOutMenu = (0, _reactCreateRef2.default)(), _this.show = function () {\n      return _this.slideOutMenu.current.show();\n    }, _this.hide = function () {\n      return _this.slideOutMenu.current.hide();\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ContextAwareSlideoutMenu, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      return _react2.default.createElement(_PageAndMenu.Context.Consumer, null, function (context) {\n        return _react2.default.createElement(SlideoutMenu, _extends({\n          ref: _this2.slideOutMenu\n        }, _this2.props, {\n          registerMenu: context.registerMenu,\n          toggleMenu: context.toggleMenu,\n          getTogglerNode: context.getTogglerNode\n        }));\n      });\n    }\n  }]);\n\n  return ContextAwareSlideoutMenu;\n}(PureComponent); // const ContextAwareSlideoutMenu = (props) => (\n// \t<PageAndMenuContext.Consumer>\n// \t\t{context => (\n// \t\t\t<SlideoutMenu\n// \t\t\t\t{...props}\n// \t\t\t\tregisterMenu={context.registerMenu}\n// \t\t\t\ttoggleMenu={context.toggleMenu}/>\n// \t\t\t)\n// \t\t}\n// \t</PageAndMenuContext.Consumer>\n// )\n// export default ContextAwareSlideoutMenu\n// Swipeable feature example source code:\n// https://github.com/mui-org/material-ui/blob/v1-beta/packages/material-ui/src/SwipeableDrawer/SwipeableDrawer.js\n// A slideout menu.\n\n\nexports.default = ContextAwareSlideoutMenu;\nvar SlideoutMenu = (_temp3 = _class2 = function (_PureComponent2) {\n  _inherits(SlideoutMenu, _PureComponent2);\n\n  function SlideoutMenu() {\n    var _ref2;\n\n    var _temp2, _this3, _ret2;\n\n    _classCallCheck(this, SlideoutMenu);\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return _ret2 = (_temp2 = (_this3 = _possibleConstructorReturn(this, (_ref2 = SlideoutMenu.__proto__ || Object.getPrototypeOf(SlideoutMenu)).call.apply(_ref2, [this].concat(args))), _this3), _this3.state = {\n      // show: this.props.isOpen\n      show: false\n    }, _this3.container = (0, _reactCreateRef2.default)(), _this3.toggle = function (show, onAfterToggle) {\n      var _this3$props = _this3.props,\n          onCollapse = _this3$props.onCollapse,\n          onExpand = _this3$props.onExpand;\n\n      if (show === _this3.state.show) {\n        return;\n      }\n\n      if (show === undefined) {\n        show = !_this3.state.show;\n      }\n\n      if (show) {\n        onExpand && onExpand();\n      } else {\n        onCollapse && onCollapse();\n      }\n\n      _this3.setState({\n        show: show\n      }, onAfterToggle);\n    }, _this3.hide = function () {\n      var toggleMenu = _this3.props.toggleMenu;\n      var show = _this3.state.show;\n\n      if (show) {\n        toggleMenu();\n      }\n    }, _this3.onKeyDown = function (event) {\n      var toggleMenu = _this3.props.toggleMenu;\n\n      if (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\n        return;\n      }\n\n      switch (event.keyCode) {\n        // Collapse on \"Escape\".\n        case 27:\n          event.preventDefault();\n          return toggleMenu();\n      }\n    }, _this3.onBlur = function (event) {\n      return _this3.onFocusOutRef.onBlur(event);\n    }, _this3.storeOnFocusOutRef = function (ref) {\n      return _this3.onFocusOutRef = ref;\n    }, _this3.getContainerNode = function () {\n      return _this3.container.current;\n    }, _this3.onFocusOut = function () {\n      var toggleMenu = _this3.props.toggleMenu; // `window.rruiCollapseOnFocusOut` can be used\n      // for debugging expandable contents.\n\n      if (window.rruiCollapseOnFocusOut !== false) {\n        toggleMenu(false);\n      }\n    }, _temp2), _possibleConstructorReturn(_this3, _ret2);\n  }\n\n  _createClass(SlideoutMenu, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      var _props = this.props,\n          registerMenu = _props.registerMenu,\n          menuRef = _props.menuRef;\n      var show = this.state.show;\n      this.unregister = registerMenu({\n        hide: function hide() {\n          return _this4.setState({\n            show: false\n          });\n        },\n        toggle: this.toggle,\n        isShown: function isShown() {\n          return _this4.state.show;\n        },\n        element: function element() {\n          return _this4.container.current;\n        },\n        menu: function menu() {\n          return menuRef ? menuRef.current : _this4.container.current;\n        }\n      }); // // Hide on `Back`/`Forward` navigation.\n      // window.addEventListener('popstate', this.hide)\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.unregister(); // window.removeEventListener('popstate', this.hide)\n    } // componentDidUpdate(prevProps)\n    // {\n    // \tconst { isOpen } = this.props\n    // \tif (prevProps.isOpen && !isOpen) {\n    // \t\tthis.hide()\n    // \t} else if (!prevProps.isOpen && isOpen) {\n    // \t\tthis.show()\n    // \t}\n    // }\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          anchor = _props2.anchor,\n          fullscreen = _props2.fullscreen,\n          getTogglerNode = _props2.getTogglerNode,\n          className = _props2.className,\n          children = _props2.children,\n          menuRef = _props2.menuRef,\n          onExpand = _props2.onExpand,\n          onCollapse = _props2.onCollapse,\n          toggleMenu = _props2.toggleMenu,\n          registerMenu = _props2.registerMenu,\n          rest = _objectWithoutProperties(_props2, ['anchor', 'fullscreen', 'getTogglerNode', 'className', 'children', 'menuRef', 'onExpand', 'onCollapse', 'toggleMenu', 'registerMenu']);\n\n      var show = this.state.show; // ARIA menu notes:\n      // https://www.w3.org/TR/wai-aria-practices/examples/menu-button/menu-button-links.html\n      // `tabIndex=\"-1\"` is for calling `this.container.current.focus()`\n      // when no `menuRef` is supplied.\n\n      var element = _react2.default.createElement('div', _extends({}, rest, {\n        ref: this.container,\n        'aria-hidden': !show,\n        tabIndex: -1,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        className: (0, _classnames2.default)(className,\n        /* Developers can define custom `:focus` style for the slideout menu. */\n\n        /* (or better add `menuRef` property pointing to a component having `.focus()` method). */\n        'rrui__outline', 'rrui__slideout-menu', {\n          'rrui__slideout-menu--left': anchor === 'left',\n          'rrui__slideout-menu--right': anchor === 'right',\n          'rrui__slideout-menu--top': anchor === 'top',\n          'rrui__slideout-menu--bottom': anchor === 'bottom',\n          'rrui__slideout-menu--fullscreen': fullscreen,\n          'rrui__slideout-menu--expanded': show\n        })\n      }), children);\n\n      return _react2.default.createElement(_OnFocusOut2.default, {\n        ref: this.storeOnFocusOutRef,\n        getContainerNode: this.getContainerNode,\n        getTogglerNode: getTogglerNode,\n        onFocusOut: this.onFocusOut\n      }, element);\n    }\n  }]);\n\n  return SlideoutMenu;\n}(PureComponent), _class2.propTypes = {\n  anchor: _propTypes2.default.oneOf(['left', 'right', 'top', 'bottom']).isRequired,\n  // isOpen : PropTypes.bool.isRequired,\n  fullscreen: _propTypes2.default.bool.isRequired,\n  // A result of `React.createRef()`.\n  // Will be focused when the menu is opened.\n  menuRef: _propTypes2.default.object,\n  onCollapse: _propTypes2.default.func,\n  onExpand: _propTypes2.default.func,\n  toggleMenu: _propTypes2.default.func.isRequired,\n  registerMenu: _propTypes2.default.func.isRequired,\n  getTogglerNode: _propTypes2.default.func.isRequired,\n  // CSS style object\n  style: _propTypes2.default.object,\n  // CSS class\n  className: _propTypes2.default.string\n}, _class2.defaultProps = {\n  // isOpen : false,\n  anchor: 'left',\n  fullscreen: false\n}, _temp3);","map":null,"metadata":{},"sourceType":"script"}